# dune build
# OCAMLPARAM: unset
# Shared cache: disabled
# Workspace root: /Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp
# Auto-detected concurrency: 8
$ /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -config > /var/folders/fd/6wpq57l17fj4rzmkz7x59nv80000gn/T/dune_0a858c_output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; ocaml_bin = External "/Users/louismilhaud/.opam/5.0.0/bin"
#  ; ocaml = Ok External "/Users/louismilhaud/.opam/5.0.0/bin/ocaml"
#  ; ocamlc = External "/Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt"
#  ; ocamlopt = Ok External "/Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt"
#  ; ocamldep = Ok External "/Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt"
#  ; ocamlmklib =
#      Ok External "/Users/louismilhaud/.opam/5.0.0/bin/ocamlmklib.opt"
#  ; env =
#      map
#        { "DUNE_OCAML_HARDCODED" :
#            "/Users/louismilhaud/.opam/5.0.0/lib/ocaml:/Users/louismilhaud/.opam/5.0.0/lib"
#        ; "DUNE_OCAML_STDLIB" : "/Users/louismilhaud/.opam/5.0.0/lib/ocaml"
#        ; "DUNE_SOURCEROOT" :
#            "/Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp"
#        ; "INSIDE_DUNE" :
#            "/Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp/_build/default"
#        ; "OCAMLFIND_IGNORE_DUPS_IN" :
#            "/Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp/_build/install/default/lib"
#        ; "OCAMLPATH" :
#            "/Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp/_build/install/default/lib"
#        ; "OCAMLTOP_INCLUDE_PATH" :
#            "/Users/louismilhaud/workspace/Compilation2Mips/Simpc/Asimp/_build/install/default/lib/toplevel"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; findlib_paths =
#      [ External "/Users/louismilhaud/.opam/5.0.0/lib/ocaml"
#      ; External "/Users/louismilhaud/.opam/5.0.0/lib"
#      ]
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; ocaml_config =
#      { version = "5.0.0"
#      ; standard_library_default = "/Users/louismilhaud/.opam/5.0.0/lib/ocaml"
#      ; standard_library = "/Users/louismilhaud/.opam/5.0.0/lib/ocaml"
#      ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#      ; ccomp_type = "cc"
#      ; c_compiler = "cc"
#      ; ocamlc_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread" ]
#      ; ocamlc_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; ocamlopt_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread" ]
#      ; ocamlopt_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; bytecomp_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; bytecomp_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; native_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_pack_linker = [ "ld"; "-r"; "-o" ]
#      ; cc_profile = []
#      ; architecture = "arm64"
#      ; model = "default"
#      ; int_size = 63
#      ; word_size = 64
#      ; system = "macosx"
#      ; asm = [ "cc"; "-c"; "-Wno-trigraphs" ]
#      ; asm_cfi_supported = true
#      ; with_frame_pointers = false
#      ; ext_exe = ""
#      ; ext_obj = ".o"
#      ; ext_asm = ".s"
#      ; ext_lib = ".a"
#      ; ext_dll = ".so"
#      ; os_type = "Unix"
#      ; default_executable_name = "a.out"
#      ; systhread_supported = true
#      ; host = "aarch64-apple-darwin22.6.0"
#      ; target = "aarch64-apple-darwin22.6.0"
#      ; profiling = false
#      ; flambda = false
#      ; spacetime = false
#      ; safe_string = true
#      ; exec_magic_number = "Caml1999X032"
#      ; cmi_magic_number = "Caml1999I032"
#      ; cmo_magic_number = "Caml1999O032"
#      ; cma_magic_number = "Caml1999A032"
#      ; cmx_magic_number = "Caml1999Y032"
#      ; cmxa_magic_number = "Caml1999Z032"
#      ; ast_impl_magic_number = "Caml1999M032"
#      ; ast_intf_magic_number = "Caml1999N032"
#      ; cmxs_magic_number = "Caml1999D032"
#      ; cmt_magic_number = "Caml1999T032"
#      ; natdynlink_supported = true
#      ; supports_shared_libraries = true
#      ; windows_unicode = false
#      }
#  }
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/menhir --explain --dump asimpparser.mly --base asimpparser --infer-write-query asimpparser__mock.ml.mock)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamllex -q -o asimplexer.ml asimplexer.mll)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimpc.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimpc.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimpparser__mock.ml.mock) > _build/default/.asimpc.eobjs/asimpparser__mock.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimp2imp.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimp2imp.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimplexer.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimplexer.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimptyper.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimptyper.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl imp2mips.ml) > _build/default/.asimpc.eobjs/dune__exe__Imp2mips.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl imppp.ml) > _build/default/.asimpc.eobjs/dune__exe__Imppp.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl mips.ml) > _build/default/.asimpc.eobjs/dune__exe__Mips.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimp.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimp.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl imp.ml) > _build/default/.asimpc.eobjs/dune__exe__Imp.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -49 -nopervasives -nostdlib -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -o .asimpc.eobjs/byte/dune__exe.cmo -c -impl .asimpc.eobjs/dune__exe.ml-gen)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimp.cmo -c -impl asimp.ml)
$ (cd _build/.sandbox/b2d195c752049c518de6a9fc3a1cf046/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -I .asimpc.eobjs/byte -open Dune__exe -short-paths -i -impl asimpparser__mock.ml.mock) > _build/.sandbox/b2d195c752049c518de6a9fc3a1cf046/default/asimpparser__mock.mli.inferred
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/menhir --explain --dump asimpparser.mly --base asimpparser --infer-read-reply asimpparser__mock.mli.inferred)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -intf asimpparser.mli) > _build/default/.asimpc.eobjs/dune__exe__Asimpparser.intf.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamldep.opt -modules -impl asimpparser.ml) > _build/default/.asimpc.eobjs/dune__exe__Asimpparser.impl.d
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Imp.cmo -c -impl imp.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimpparser.cmi -c -intf asimpparser.mli)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimptyper.cmo -c -impl asimptyper.ml)
> File "asimptyper.ml", lines 34-37, characters 61-50:
> 34 | .............................................................match e.expr with
> 35 |       | Cst n -> mk_expr TInt (Cst n)
> 36 |       | Bool b -> mk_expr TBool (Bool b)
> 37 |       | Var x -> mk_expr (Env.find x tenv) (Var x)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Binop (_, _, _)|Call (_, _)|New _|NewTab (_, _)|Read _)
> File "asimptyper.ml", lines 43-44, characters 21-59:
> 43 | .....................function
> 44 |       | Putchar e     -> Putchar (check (type_expr e) TInt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Set (_, {annot=(); _ })|If ({annot=(); _ }, _, _)|While ({annot=(); _ }, _)|
> Return {annot=(); _ }|Expr {annot=(); _ }|Write (_, {annot=(); _ }))
> File "asimptyper.ml", line 21, characters 6-10:
> 21 |   let tenv = add2env p.globals Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable tenv.
> File "asimptyper.ml", line 22, characters 6-10:
> 22 |   let fenv = add2env (List.map (fun (f: unit function_def) -> f.name, f) p.functions) Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable fenv.
> File "asimptyper.ml", line 23, characters 6-10:
> 23 |   let senv = add2env (List.map (fun s -> s.name, s) p.structs) Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable senv.
> File "asimptyper.ml", line 38, characters 8-16:
> 38 |     and type_mem m = failwith "not implemented"
>              ^^^^^^^^
> Warning 26 [unused-var]: unused variable type_mem.
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimp2imp.cmo -c -impl asimp2imp.ml)
> File "asimp2imp.ml", lines 10-14, characters 69-66:
> 10 | .....................................................................match te.expr with
> 11 |     | Cst n  -> Cst n
> 12 |     | Bool b -> Bool b
> 13 |     | Var x  -> Var x
> 14 |     | Binop(op, e1, e2) -> Binop(tr_op op, tr_expr e1, tr_expr e2)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Call (_, _)|New _|NewTab (_, _)|Read _)
> File "asimp2imp.ml", lines 20-21, characters 65-41:
> 20 | .................................................................function
> 21 |     | Putchar e     -> Putchar(tr_expr e)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Set (_, _)|If (_, _, _)|While (_, _)|Return _|Expr _|Write (_, _))
> File "asimp2imp.ml", line 15, characters 6-12:
> 15 |   and tr_mem m = failwith "not implemented"
>            ^^^^^^
> Warning 26 [unused-var]: unused variable tr_mem.
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Mips.cmo -c -impl mips.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Imppp.cmo -c -impl imppp.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimplexer.cmo -c -impl asimplexer.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Imp2mips.cmo -c -impl imp2mips.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Imp.cmx -c -impl imp.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimp.cmx -c -impl asimp.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimp2imp.cmx -c -impl asimp2imp.ml)
> File "asimp2imp.ml", lines 10-14, characters 69-66:
> 10 | .....................................................................match te.expr with
> 11 |     | Cst n  -> Cst n
> 12 |     | Bool b -> Bool b
> 13 |     | Var x  -> Var x
> 14 |     | Binop(op, e1, e2) -> Binop(tr_op op, tr_expr e1, tr_expr e2)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Call (_, _)|New _|NewTab (_, _)|Read _)
> File "asimp2imp.ml", lines 20-21, characters 65-41:
> 20 | .................................................................function
> 21 |     | Putchar e     -> Putchar(tr_expr e)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Set (_, _)|If (_, _, _)|While (_, _)|Return _|Expr _|Write (_, _))
> File "asimp2imp.ml", line 15, characters 6-12:
> 15 |   and tr_mem m = failwith "not implemented"
>            ^^^^^^
> Warning 26 [unused-var]: unused variable tr_mem.
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimptyper.cmx -c -impl asimptyper.ml)
> File "asimptyper.ml", lines 34-37, characters 61-50:
> 34 | .............................................................match e.expr with
> 35 |       | Cst n -> mk_expr TInt (Cst n)
> 36 |       | Bool b -> mk_expr TBool (Bool b)
> 37 |       | Var x -> mk_expr (Env.find x tenv) (Var x)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Binop (_, _, _)|Call (_, _)|New _|NewTab (_, _)|Read _)
> File "asimptyper.ml", lines 43-44, characters 21-59:
> 43 | .....................function
> 44 |       | Putchar e     -> Putchar (check (type_expr e) TInt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Set (_, {annot=(); _ })|If ({annot=(); _ }, _, _)|While ({annot=(); _ }, _)|
> Return {annot=(); _ }|Expr {annot=(); _ }|Write (_, {annot=(); _ }))
> File "asimptyper.ml", line 21, characters 6-10:
> 21 |   let tenv = add2env p.globals Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable tenv.
> File "asimptyper.ml", line 22, characters 6-10:
> 22 |   let fenv = add2env (List.map (fun (f: unit function_def) -> f.name, f) p.functions) Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable fenv.
> File "asimptyper.ml", line 23, characters 6-10:
> 23 |   let senv = add2env (List.map (fun s -> s.name, s) p.structs) Env.empty in
>            ^^^^
> Warning 26 [unused-var]: unused variable senv.
> File "asimptyper.ml", line 38, characters 8-16:
> 38 |     and type_mem m = failwith "not implemented"
>              ^^^^^^^^
> Warning 26 [unused-var]: unused variable type_mem.
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -49 -nopervasives -nostdlib -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml-gen -no-alias-deps -opaque -o .asimpc.eobjs/native/dune__exe.cmx -c -impl .asimpc.eobjs/dune__exe.ml-gen)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Imppp.cmx -c -impl imppp.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlc.opt -g -bin-annot -I .asimpc.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/byte/dune__exe__Asimpc.cmo -c -impl asimpc.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Mips.cmx -c -impl mips.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimpparser.cmx -c -impl asimpparser.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimplexer.cmx -c -impl asimplexer.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Asimpc.cmx -c -impl asimpc.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -I .asimpc.eobjs/byte -I .asimpc.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .asimpc.eobjs/native/dune__exe__Imp2mips.cmx -c -impl imp2mips.ml)
$ (cd _build/default && /Users/louismilhaud/.opam/5.0.0/bin/ocamlopt.opt -g -o asimpc.exe .asimpc.eobjs/native/dune__exe.cmx .asimpc.eobjs/native/dune__exe__Asimp.cmx .asimpc.eobjs/native/dune__exe__Imp.cmx .asimpc.eobjs/native/dune__exe__Asimp2imp.cmx .asimpc.eobjs/native/dune__exe__Asimpparser.cmx .asimpc.eobjs/native/dune__exe__Asimplexer.cmx .asimpc.eobjs/native/dune__exe__Asimptyper.cmx .asimpc.eobjs/native/dune__exe__Mips.cmx .asimpc.eobjs/native/dune__exe__Imp2mips.cmx .asimpc.eobjs/native/dune__exe__Imppp.cmx .asimpc.eobjs/native/dune__exe__Asimpc.cmx)
# Promoting "_build/default/asimpc.exe" to "asimpc.exe"
